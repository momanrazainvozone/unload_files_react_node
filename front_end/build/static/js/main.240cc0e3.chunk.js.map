{"version":3,"sources":["pages/Upload_file/components/FileUplaoded.js","pages/Upload_file/components/FileDetail.js","pages/Upload_file/uplaodfile.js","App.js","reportWebVitals.js","index.js"],"names":["FileUplaoded","props","isFileUplaoded","Alert","severity","color","FileDetail","selectedFile","name","type","lastModifiedDate","toDateString","UploadFile","useState","setselectedFile","setisFileUplaoded","uplaodingFile","setuplaodingFile","uploadFile","a","form_data","FormData","append","reqObj","method","url","data","axios","status","CircularProgress","className","onClick","onChange","event","target","files","onFileChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSACO,SAASA,EAAaC,GAC3B,OACE,8BACGA,EAAMC,eACL,cAACC,EAAA,EAAD,CAAOC,SAAS,UAAUC,MAAM,OAAhC,uCAGE,OCRH,SAASC,EAAWL,GACzB,OACE,qCACE,+CACA,4CAAeA,EAAMM,aAAaC,QAClC,4CAAeP,EAAMM,aAAaE,QAClC,gDAAmBR,EAAMM,aAAaG,iBAAiBC,qB,MCgD9CC,MAhDf,WACE,MAAwCC,qBAAxC,mBAAON,EAAP,KAAqBO,EAArB,KACA,EAA4CD,oBAAS,GAArD,mBAAOX,EAAP,KAAuBa,EAAvB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAKMC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBF,GAAiB,IACXG,EAAY,IAAIC,UACZC,OAAO,cAAef,GAC1BgB,EAAS,CACbC,OAAQ,OACRC,IAAK,mCACLC,KAAMN,GAPS,SASKO,IAAMJ,GATX,OAUM,MAVN,OAULK,SACVb,GAAkB,GAClBD,EAAgB,MAChBG,GAAiB,IAbF,2CAAH,qDAiBhB,OAAID,EACK,cAACa,EAAA,EAAD,CAAkBC,UAAU,gBAEjCvB,EAEA,gCACE,cAACP,EAAD,CAAcE,eAAgBA,IAC9B,oBAAI4B,UAAU,aAAd,gCACA,cAACxB,EAAD,CAAYC,aAAcA,IAC1B,wBAAQwB,QAAS,kBAAMb,KAAvB,sBAKJ,gCACE,cAAClB,EAAD,CAAcE,eAAgBA,IAC9B,oBAAI4B,UAAU,aAAd,gCACA,uBACA,0EACA,uBAAOrB,KAAK,OAAOuB,SAAU,SAACC,GAAD,OAvCZ,SAACA,GACpBnB,EAAgBmB,EAAMC,OAAOC,MAAM,IAsCOC,CAAaH,UC9C5CI,MAHf,WACE,OAAO,cAAC,EAAD,KCUMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.240cc0e3.chunk.js","sourcesContent":["import Alert from \"@mui/material/Alert\";\nexport function FileUplaoded(props) {\n  return (\n    <div>\n      {props.isFileUplaoded ? (\n        <Alert severity=\"success\" color=\"info\">\n          File uplaod success fully\n        </Alert>\n      ) : null}\n    </div>\n  );\n}\n","export function FileDetail(props) {\n  return (\n    <>\n      <h2>File Details:</h2>\n      <p>File Name: {props.selectedFile.name}</p>\n      <p>File Type: {props.selectedFile.type}</p>\n      <p>Last Modified: {props.selectedFile.lastModifiedDate.toDateString()}</p>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { FileUplaoded } from \"./components/FileUplaoded\";\nimport { FileDetail } from \"./components/FileDetail\";\nimport \"./uploadFile.css\";\nfunction UploadFile() {\n  const [selectedFile, setselectedFile] = useState();\n  const [isFileUplaoded, setisFileUplaoded] = useState(false);\n  const [uplaodingFile, setuplaodingFile] = useState(false);\n  //===================={FUNCTIONS}==================//\n  const onFileChange = (event) => {\n    setselectedFile(event.target.files[0]);\n  };\n  const uploadFile = async () => {\n    setuplaodingFile(true);\n    const form_data = new FormData();\n    form_data.append(\"singleImage\", selectedFile);\n    const reqObj = {\n      method: \"POST\",\n      url: \"http://localhost:5000/singleFile\",\n      data: form_data,\n    };\n    const results = await axios(reqObj);\n    if (results.status === 200) {\n      setisFileUplaoded(true);\n      setselectedFile(null);\n      setuplaodingFile(false);\n    }\n  };\n  //========================{RENDRING COMPONENTS}===================//\n  if (uplaodingFile) {\n    return <CircularProgress className=\"circularbar\" />;\n  }\n  if (selectedFile) {\n    return (\n      <div>\n        <FileUplaoded isFileUplaoded={isFileUplaoded} />\n        <h1 className=\"textCenter\">Send File to flask</h1>\n        <FileDetail selectedFile={selectedFile} />\n        <button onClick={() => uploadFile()}>Send!</button>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <FileUplaoded isFileUplaoded={isFileUplaoded} />\n      <h1 className=\"textCenter\">Send File to flask</h1>\n      <br />\n      <h4>Choose before Pressing the Upload button</h4>\n      <input type=\"file\" onChange={(event) => onFileChange(event)} />\n    </div>\n  );\n}\nexport default UploadFile;\n","import UploadFile from \"./pages/Upload_file/uplaodfile\";\nfunction App() {\n  return <UploadFile />;\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}